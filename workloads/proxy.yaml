apiVersion: v1
kind: ConfigMap
metadata:
  name: proxy-config
  namespace: default
data:
  artifactory.conf: |-
    ## server configuration
    server {
        listen 80 ;
        
        server_name artifactory.jfrog.com;
        if ($http_x_forwarded_proto = '') {
            set $http_x_forwarded_proto  $scheme;
        }
        rewrite ^/$ /artifactory/webapp/ redirect;
        rewrite ^/artifactory/?(/webapp)?$ /artifactory/webapp/ redirect;
        chunked_transfer_encoding on;
        client_max_body_size 0;
        location / {
            proxy_read_timeout  900;
            proxy_pass_header   Server;
            proxy_cookie_path   ~*^/.* /;
            if ( $request_uri ~ ^/artifactory/(.*)$ ) {
                proxy_pass          http://artifactory:8081/artifactory/$1;
            }
            proxy_pass          http://artifactory:8081/artifactory/;
            proxy_set_header    X-Forwarded-Port  $server_port;
            proxy_set_header    X-Forwarded-Proto $http_x_forwarded_proto;
            proxy_set_header    Host              $http_host;
            proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
        }
    }   
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: proxy
  labels:
    app: proxy
spec:
  replicas: 1
  selector:
    matchLabels:
     app: proxy
  template:
    metadata:
      labels:
        app: proxy
      annotations:
        kubernetes.io/change-cause: "First Commit"           
    spec:
      containers:
      - name: proxy
        image: nginx:1.16.0
        ports:
        - containerPort: 80
          name: http       
        volumeMounts:
          - name: config
            mountPath: /etc/nginx/conf.d   
      volumes:     
      - name: config
        configMap:
          name: proxy-config         
---          
apiVersion: v1
kind: Service
metadata:
  name: proxy
  namespace: default
  labels:
    app: proxy
spec:
  selector:
    app: proxy
  ports:
  - name: http
    port: 80
    targetPort: http       
#  type: LoadBalancer    